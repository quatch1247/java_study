
Inheritance(상속)

:상속이란 기존의 클래스를 재사용하여 새로운 클래스를 작성하는 것이다.
상속을 통해서 클래스를 작성하면 보다 적은 양의 코드로 새로운 클래스를
작성할 수 있고 코드를 공통적으로 관리할 수 있기 때문에 코드의 추가 및
변경은 매우 용이하다.
이러한 특징은 코드의 재사용성을 높이고 코드의 중복을 제거하여 프로그램의 
생산성과 유지보수를 용이하게 한다.

상속 관계에서 기존 클래스를 Super Class(수퍼클래스) 또는 Parent Class(부모 클래스)
라 하고 이 클래스를 확장하여 새롭게 정의한 클래스를 Sub Class(서브 클래스) 또는 Child Class(자식 클래스)
라고 합니다. 결국 상속해 주는 클래스가 슈퍼 클래스, 상속 받는 클래스가 서브 클래스가
됩니다. 이와 같이 서브 클래스가 슈퍼클래스의 상속 및 기능들을 물려 받는 것을 상속이라고 합니다

상속을 사용하면 클래스를 선언할 때 마다 모든 멤버를 다시 만들 필요가 없습니다.
새롭게 추가되는 자신의 특성만 기술하고, 공통된 부분은 슈퍼클래스의 멤버를 상속받아 해결합니다.
결국 클래스 계층 위로 올라갈수록 추상화된 내용을 기술하고, 아래로 내려올수록 보다 구체적인 내용을
기술하게 됩니다. 이처럼 클래스가 계층적으로 구성되면 클래스들을 보다 효율적으로 사용할 수 있습니다.

자바는 상속을 이용해 클래스의 계층구조를 구성하비낟.
자바는 계층구조의 라이브러리를 갖고 있으며 jdk는 object 클래스를
최상위 클래스로 정해 놓고 많은 클래스가 상속 받는 구조로 되어 있습니다.

상속의 사용 방법
: 자바에서 클래스를 상속 받기 위해 extends 키워드를 사용합니다.
[public / abstract / final] class 서브클래스 extends 슈퍼클래스
{
멤버1;
멤버2;
...;
}